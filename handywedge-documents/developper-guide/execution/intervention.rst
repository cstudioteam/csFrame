アプリケーション実行制御
================================================
.. index::
    single: インターセプター

-------------------------------------
Handywedgeによる実行制御
-------------------------------------
| アプリケーションはJava EE8のアーキテクチャーに基づいて実装する。
| **Handywedge** は、主に次の３か所に介入してアプリケーションの制御を行う。


.. csv-table::
    :header-rows: 1

    "介入形式", "説明"
    "サーブレットフィルター", "Webのリクエスト受付時、及びレスポンス返却時。"
    "インターセプター", "トランザクションの境界となるビジネスロジックの開始、終了時。"
    "ライブラリ", "ライブラリクラスとしてミドルウェアや外部システム呼び出しの開始、終了時。"

リクエストにおける **Handywedge** の介入ポイントの概念図を次に示す。

.. seqdiag::
   :name: seq-intervention

   seqdiag {
      span_height = 20;
              ユーザ; サーブレットフィルター; 業務プログラム（画面）; インターセプター; 業務プログラム（ビジネスロジック）; ライブラリ;

              ユーザ => サーブレットフィルター => 業務プログラム（画面） => インターセプター => 業務プログラム（ビジネスロジック） => ライブラリ;

              ユーザ [shape=actor]
              サーブレットフィルター [color=palegreen]
              業務プログラム（画面） [color=pink]
              業務プログラム（ビジネスロジック） [color=pink]
              インターセプター [color=palegreen]
              ライブラリ [color=palegreen]
   }

.. blockdiag::

   diagram {
              業務プログラム [color=pink]
      Handywedge [color=palegreen]

      group {
         label = "凡例"
         color = white

                    業務プログラム, Handywedge
      }
   }

-------------------------------------
マルチテナント制御
-------------------------------------
| **Handywedge** は一つのアプリケーションサーバに複数のアプリケーションをデプロイする **マルチテナント** に対応する。
| **Handywedge** では **アプリケーションID** と呼ばれる一意のIDでアプリケーションを識別する。
| アプリケーションIDは、warファイル名、コンテキストルート名、プロパティファイル名などにも使われる。